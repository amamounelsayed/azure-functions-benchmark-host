#pragma warning disable
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FunctionRpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TestGrpc.Messages {

  /// <summary>Holder for reflection information generated from FunctionRpc.proto</summary>
  public static partial class FunctionRpcReflection {

    #region Descriptor
    /// <summary>File descriptor for FunctionRpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FunctionRpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFGdW5jdGlvblJwYy5wcm90bxIZQXp1cmVGdW5jdGlvbnNScGNNZXNzYWdl",
            "cyKLAgoQU3RyZWFtaW5nTWVzc2FnZRISCgpyZXF1ZXN0X2lkGAEgASgJEj4K",
            "DHN0YXJ0X3N0cmVhbRgUIAEoCzImLkF6dXJlRnVuY3Rpb25zUnBjTWVzc2Fn",
            "ZXMuU3RhcnRTdHJlYW1IABJKChJpbnZvY2F0aW9uX3JlcXVlc3QYBCABKAsy",
            "LC5BenVyZUZ1bmN0aW9uc1JwY01lc3NhZ2VzLkludm9jYXRpb25SZXF1ZXN0",
            "SAASTAoTaW52b2NhdGlvbl9yZXNwb25zZRgFIAEoCzItLkF6dXJlRnVuY3Rp",
            "b25zUnBjTWVzc2FnZXMuSW52b2NhdGlvblJlc3BvbnNlSABCCQoHY29udGVu",
            "dCIgCgtTdGFydFN0cmVhbRIRCgl3b3JrZXJfaWQYAiABKAkiPwoRSW52b2Nh",
            "dGlvblJlcXVlc3QSFQoNaW52b2NhdGlvbl9pZBgBIAEoCRITCgtmdW5jdGlv",
            "bl9pZBgCIAEoCSI7ChJJbnZvY2F0aW9uUmVzcG9uc2USFQoNaW52b2NhdGlv",
            "bl9pZBgBIAEoCRIOCgZyZXN1bHQYAyABKAkyfAoLRnVuY3Rpb25ScGMSbQoL",
            "RXZlbnRTdHJlYW0SKy5BenVyZUZ1bmN0aW9uc1JwY01lc3NhZ2VzLlN0cmVh",
            "bWluZ01lc3NhZ2UaKy5BenVyZUZ1bmN0aW9uc1JwY01lc3NhZ2VzLlN0cmVh",
            "bWluZ01lc3NhZ2UiACgBMAFCigEKKmNvbS5taWNyb3NvZnQuYXp1cmUuZnVu",
            "Y3Rpb25zLnJwYy5tZXNzYWdlc0INRnVuY3Rpb25Qcm90b1ABWjdnaXRodWIu",
            "Y29tL0F6dXJlL2F6dXJlLWZ1bmN0aW9ucy1nby13b3JrZXIvaW50ZXJuYWwv",
            "cnBjqgIRVGVzdEdycGMuTWVzc2FnZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TestGrpc.Messages.StreamingMessage), global::TestGrpc.Messages.StreamingMessage.Parser, new[]{ "RequestId", "StartStream", "InvocationRequest", "InvocationResponse" }, new[]{ "Content" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestGrpc.Messages.StartStream), global::TestGrpc.Messages.StartStream.Parser, new[]{ "WorkerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestGrpc.Messages.InvocationRequest), global::TestGrpc.Messages.InvocationRequest.Parser, new[]{ "InvocationId", "FunctionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestGrpc.Messages.InvocationResponse), global::TestGrpc.Messages.InvocationResponse.Parser, new[]{ "InvocationId", "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StreamingMessage : pb::IMessage<StreamingMessage> {
    private static readonly pb::MessageParser<StreamingMessage> _parser = new pb::MessageParser<StreamingMessage>(() => new StreamingMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestGrpc.Messages.FunctionRpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingMessage(StreamingMessage other) : this() {
      requestId_ = other.requestId_;
      switch (other.ContentCase) {
        case ContentOneofCase.StartStream:
          StartStream = other.StartStream.Clone();
          break;
        case ContentOneofCase.InvocationRequest:
          InvocationRequest = other.InvocationRequest.Clone();
          break;
        case ContentOneofCase.InvocationResponse:
          InvocationResponse = other.InvocationResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingMessage Clone() {
      return new StreamingMessage(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private string requestId_ = "";
    /// <summary>
    /// Used to identify message between host and worker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_stream" field.</summary>
    public const int StartStreamFieldNumber = 20;
    /// <summary>
    /// Worker initiates stream
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TestGrpc.Messages.StartStream StartStream {
      get { return contentCase_ == ContentOneofCase.StartStream ? (global::TestGrpc.Messages.StartStream) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.StartStream;
      }
    }

    /// <summary>Field number for the "invocation_request" field.</summary>
    public const int InvocationRequestFieldNumber = 4;
    /// <summary>
    /// Host requests a given invocation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TestGrpc.Messages.InvocationRequest InvocationRequest {
      get { return contentCase_ == ContentOneofCase.InvocationRequest ? (global::TestGrpc.Messages.InvocationRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.InvocationRequest;
      }
    }

    /// <summary>Field number for the "invocation_response" field.</summary>
    public const int InvocationResponseFieldNumber = 5;
    /// <summary>
    /// Worker responds to a given invocation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TestGrpc.Messages.InvocationResponse InvocationResponse {
      get { return contentCase_ == ContentOneofCase.InvocationResponse ? (global::TestGrpc.Messages.InvocationResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.InvocationResponse;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      StartStream = 20,
      InvocationRequest = 4,
      InvocationResponse = 5,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(StartStream, other.StartStream)) return false;
      if (!object.Equals(InvocationRequest, other.InvocationRequest)) return false;
      if (!object.Equals(InvocationResponse, other.InvocationResponse)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (contentCase_ == ContentOneofCase.StartStream) hash ^= StartStream.GetHashCode();
      if (contentCase_ == ContentOneofCase.InvocationRequest) hash ^= InvocationRequest.GetHashCode();
      if (contentCase_ == ContentOneofCase.InvocationResponse) hash ^= InvocationResponse.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (contentCase_ == ContentOneofCase.InvocationRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(InvocationRequest);
      }
      if (contentCase_ == ContentOneofCase.InvocationResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(InvocationResponse);
      }
      if (contentCase_ == ContentOneofCase.StartStream) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(StartStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (contentCase_ == ContentOneofCase.StartStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartStream);
      }
      if (contentCase_ == ContentOneofCase.InvocationRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvocationRequest);
      }
      if (contentCase_ == ContentOneofCase.InvocationResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvocationResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingMessage other) {
      if (other == null) {
        return;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.StartStream:
          if (StartStream == null) {
            StartStream = new global::TestGrpc.Messages.StartStream();
          }
          StartStream.MergeFrom(other.StartStream);
          break;
        case ContentOneofCase.InvocationRequest:
          if (InvocationRequest == null) {
            InvocationRequest = new global::TestGrpc.Messages.InvocationRequest();
          }
          InvocationRequest.MergeFrom(other.InvocationRequest);
          break;
        case ContentOneofCase.InvocationResponse:
          if (InvocationResponse == null) {
            InvocationResponse = new global::TestGrpc.Messages.InvocationResponse();
          }
          InvocationResponse.MergeFrom(other.InvocationResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 34: {
            global::TestGrpc.Messages.InvocationRequest subBuilder = new global::TestGrpc.Messages.InvocationRequest();
            if (contentCase_ == ContentOneofCase.InvocationRequest) {
              subBuilder.MergeFrom(InvocationRequest);
            }
            input.ReadMessage(subBuilder);
            InvocationRequest = subBuilder;
            break;
          }
          case 42: {
            global::TestGrpc.Messages.InvocationResponse subBuilder = new global::TestGrpc.Messages.InvocationResponse();
            if (contentCase_ == ContentOneofCase.InvocationResponse) {
              subBuilder.MergeFrom(InvocationResponse);
            }
            input.ReadMessage(subBuilder);
            InvocationResponse = subBuilder;
            break;
          }
          case 162: {
            global::TestGrpc.Messages.StartStream subBuilder = new global::TestGrpc.Messages.StartStream();
            if (contentCase_ == ContentOneofCase.StartStream) {
              subBuilder.MergeFrom(StartStream);
            }
            input.ReadMessage(subBuilder);
            StartStream = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Worker sends the host information identifying itself
  /// </summary>
  public sealed partial class StartStream : pb::IMessage<StartStream> {
    private static readonly pb::MessageParser<StartStream> _parser = new pb::MessageParser<StartStream>(() => new StartStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestGrpc.Messages.FunctionRpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartStream(StartStream other) : this() {
      workerId_ = other.workerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartStream Clone() {
      return new StartStream(this);
    }

    /// <summary>Field number for the "worker_id" field.</summary>
    public const int WorkerIdFieldNumber = 2;
    private string workerId_ = "";
    /// <summary>
    /// id of the worker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerId {
      get { return workerId_; }
      set {
        workerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorkerId != other.WorkerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorkerId.Length != 0) hash ^= WorkerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorkerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorkerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartStream other) {
      if (other == null) {
        return;
      }
      if (other.WorkerId.Length != 0) {
        WorkerId = other.WorkerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            WorkerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Host requests worker to invoke a Function
  /// </summary>
  public sealed partial class InvocationRequest : pb::IMessage<InvocationRequest> {
    private static readonly pb::MessageParser<InvocationRequest> _parser = new pb::MessageParser<InvocationRequest>(() => new InvocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestGrpc.Messages.FunctionRpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest(InvocationRequest other) : this() {
      invocationId_ = other.invocationId_;
      functionId_ = other.functionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest Clone() {
      return new InvocationRequest(this);
    }

    /// <summary>Field number for the "invocation_id" field.</summary>
    public const int InvocationIdFieldNumber = 1;
    private string invocationId_ = "";
    /// <summary>
    /// Unique id for each invocation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvocationId {
      get { return invocationId_; }
      set {
        invocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 2;
    private string functionId_ = "";
    /// <summary>
    /// Unique id for each Function
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InvocationId != other.InvocationId) return false;
      if (FunctionId != other.FunctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InvocationId.Length != 0) hash ^= InvocationId.GetHashCode();
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InvocationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InvocationId);
      }
      if (FunctionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FunctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InvocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvocationId);
      }
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.InvocationId.Length != 0) {
        InvocationId = other.InvocationId;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InvocationId = input.ReadString();
            break;
          }
          case 18: {
            FunctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Worker responds with status of Invocation
  /// </summary>
  public sealed partial class InvocationResponse : pb::IMessage<InvocationResponse> {
    private static readonly pb::MessageParser<InvocationResponse> _parser = new pb::MessageParser<InvocationResponse>(() => new InvocationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestGrpc.Messages.FunctionRpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse(InvocationResponse other) : this() {
      invocationId_ = other.invocationId_;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse Clone() {
      return new InvocationResponse(this);
    }

    /// <summary>Field number for the "invocation_id" field.</summary>
    public const int InvocationIdFieldNumber = 1;
    private string invocationId_ = "";
    /// <summary>
    /// Unique id for invocation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvocationId {
      get { return invocationId_; }
      set {
        invocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 3;
    private string result_ = "";
    /// <summary>
    /// Status of the invocation (success/failure/canceled)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InvocationId != other.InvocationId) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InvocationId.Length != 0) hash ^= InvocationId.GetHashCode();
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InvocationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InvocationId);
      }
      if (Result.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InvocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvocationId);
      }
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationResponse other) {
      if (other == null) {
        return;
      }
      if (other.InvocationId.Length != 0) {
        InvocationId = other.InvocationId;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InvocationId = input.ReadString();
            break;
          }
          case 26: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
